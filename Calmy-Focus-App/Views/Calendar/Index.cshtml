@model IEnumerable<Calmy_Focus_App.Models.CalendarEvent>
@{
    ViewData["Title"] = "Calander Events";
}

<div class="container mt-4">
    <h1>Calendar Events</h1>

    <!-- Add Event Form -->
    <form id="addEventForm" class="mb-4">
        <div class="row g-3">
            <div class="col-md-4">
                <input type="text" class="form-control" id="eventTitle" placeholder="Event Title" required>
            </div>
            <div class="col-md-3">
                <input type="datetime-local" class="form-control" id="eventStart" required>
            </div>
            <div class="col-md-3">
                <input type="datetime-local" class="form-control" id="eventEnd">
            </div>
            <div class="col-md-2">
                <input type="text" class="form-control" id="eventDescription" placeholder="Description">
            </div>
            <div class col-md-2>
                <input type="checkbox" id="eventAllDay" class="form-check-input">
                <label for="eventAllDay" class="form-check-label">All Day</label>
            </div>
            <div class="col-md-2">
                <input type="color" class="form-control" id="eventColor" value="#3a87ad">
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary w-100">Add Event</button>
            </div>
        </div>
    </form>

    <!-- Events List -->
    <div class="events-list">
        @foreach (var evt in Model)
        {
            <div class="event-card mb-3 p-3 border rounded" data-id="@evt.Id">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>@evt.Title</h5>
                        <p>@evt.Start.ToString("MMM dd, yyyy h:mm tt")</p>
                    </div>
                    <button class="btn btn-sm btn-outline-danger delete-event" 
                            data-id="@evt.Id">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(function() {
            // Add new event
            $('#addEventForm').submit(async function(e) {
                e.preventDefault();

                const eventData = {
                    Title: $('#eventTitle').val(),
                    Start: $('#eventStart').val(),
                    End: $('#eventEnd').val() || null, // Send null if empty
                    Description: $('#eventDescription').val() || "",
                    AllDay: $('#eventAllDay').is(':checked'),
                    Color: $('#eventColor').val() || "#3a87ad" // Default color
                };

                $.ajax({
                    url: '/Calendar/Create',
                    type: 'POST',
                    contentType: 'application/json', // ← **This is crucial!**
                    data: JSON.stringify(eventData), // ← Stringify the object
                    success: function(data) {
                        location.reload(); // Reload the page to see the new event
                        // Add the new event to the list
                        const newEventHtml = `
                <div class="event-card mb-3 p-3 border rounded" data-id="${data.id}">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5>${eventData.Title}</h5>
                            <p>${new Date(eventData.Start).toLocaleString()}</p>
                        </div>
                        <div>
                            <button class="btn btn-sm btn-outline-danger delete-event" data-id="${data.id}">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>`;

                        $('.events-list').append(newEventHtml);
                        $('#addEventForm')[0].reset();
                    },
                    error: function(xhr) {
                        console.error("Error:", xhr.responseJSON);
                        alert('Error adding event: ' + xhr.responseText);
                    }
                });
            });

            // Delete event
            $(document).on('click', '.delete-event', async function() {
                const $btn = $(this);
                const eventId = $btn.data('id');
                const $card = $btn.closest('.event-card');

                if (!confirm('Permanently delete this event?')) return;

                $btn.prop('disabled', true)
                    .html('<i class="fas fa-spinner fa-spin"></i>');

                try {
                    const response = await $.ajax({
                        url: `/Calendar/Delete/${eventId}`,
                        type: 'DELETE',
                        contentType: 'application/json',
                        dataType: 'json'
                    });

                    if (response.success) {
                        $card.fadeOut(400, () => $card.remove());
                    } else {
                        showToast(`Error: ${response.error || 'Unknown error'}`, 'error');
                        $btn.prop('disabled', false)
                            .html('<i class="fas fa-trash"></i>');
                    }
                } catch (error) {
                    const errMsg = error.responseJSON?.error ||
                        error.statusText ||
                        'Connection failed';

                    console.error('Delete error:', {
                        status: error.status,
                        response: error.responseJSON,
                        eventId: eventId
                    });

                    showToast(`Delete failed: ${errMsg}`, 'error');
                    $btn.prop('disabled', false)
                        .html('<i class="fas fa-trash"></i>');
                }
            });

            // Helper function for user feedback
            function showToast(message, type = 'success') {
                const toast = `<div class="toast ${type}">${message}</div>`;
                $('body').append(toast);
                setTimeout(() => $('.toast').fadeOut(), 3000);
            }
        });
    </script>

    <style>
        .event-card {
            background: var(--surface-light);
            transition: all 0.2s;
        }
        .event-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
    </style>
}