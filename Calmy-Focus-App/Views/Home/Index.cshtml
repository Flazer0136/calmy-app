@model IEnumerable<Calmy_Focus_App.Models.Note>
@{
    ViewData["Title"] = "Notes";
}

<div class="notes-container">
    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">Add New Note</h5>
            <form asp-controller="Home" asp-action="AddNote" method="post">
                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="Title" class="form-label">Title</label>
                            <input type="text" class="form-control" id="Title" name="Title" placeholder="Note title" required>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="Content" class="form-label">Content</label>
                            <input type="text" class="form-control" id="Content" name="Content" placeholder="Note content" required>
                        </div>
                    </div>
                    <div class="col-12">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-plus me-2"></i>Add Note
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="text-center text-muted my-5">
            <i class="fas fa-sticky-note fa-3x mb-3"></i>
            <p>No notes yet. Add your first note above.</p>
        </div>
    }
    else
    {
        <div class="notes-grid">
            @foreach (var note in Model)
            {
                <div class="card note-card">
                    <div class="card-body">
                        <h5 class="card-title">@note.Title</h5>
                        <p class="text-muted">@note.Content</p>
                        <div class="note-actions">
                            <button class="btn btn-outline edit-btn"
                                    data-note-id="@note.Id"
                                    data-bs-toggle="modal"
                                    data-bs-target="#editModal">
                                <i class="fas fa-edit"></i>
                            </button>
                            <form asp-controller="Home" asp-action="DeleteNote" method="post">
                                <input type="hidden" name="id" value="@note.Id" />
                                <button type="submit" class="btn btn-outline delete-btn">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Note</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editForm" method="post">
                    <input type="hidden" id="editNoteId" name="Id">
                    <div class="mb-3">
                        <label for="editTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" name="Title" id="editTitle" required>
                    </div>
                    <div class="mb-3">
                        <label for="editContent" class="form-label">Content</label>
                        <input type="text" class="form-control" name="Content" id="editContent" required>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .notes-container {
        max-width: 1000px;
        margin: 0 auto;
    }
    
    .notes-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
    }

    .note-card {
        transition: transform 0.2s;
    }

    .note-card:hover {
        transform: translateY(-3px);
    }

    .note-actions {
        margin-top: 1rem;
        display: flex;
        gap: 0.5rem;
        justify-content: flex-end;
    }
    
    .edit-btn {
        color: var(--warning);
    }
    
    .delete-btn {
        color: var(--danger);
    }
</style>

@section Scripts {
    <script>
        document.querySelectorAll('.edit-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                const noteId = this.dataset.noteId;
                const card = this.closest('.note-card');

                document.getElementById('editNoteId').value = noteId;
                document.getElementById('editTitle').value = card.querySelector('h5').innerText;
                document.getElementById('editContent').value = card.querySelector('p').innerText;
                document.getElementById('editForm').action = `/Home/UpdateNote/${noteId}`;
            });
        });
    </script>
}
